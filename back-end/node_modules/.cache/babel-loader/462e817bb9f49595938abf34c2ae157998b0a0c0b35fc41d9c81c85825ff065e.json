{"ast":null,"code":"var _jsxFileName = \"/Users/elainetang/Code/IntelliPrep/code/react-flask/intelliprep/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Movies } from \"./components/Movies\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  /*useEffect(() => {\n    fetch(\"/movies\").then(response => response.json().then(data => {\n      setMovies(data.movies);\n    }))\n  }, []); */\n\n  var responseClone; // 1\n  fetch('/movies').then(function (response) {\n    responseClone = response.clone(); // 2\n    return response.json();\n  }).then(function (data) {\n    setMovies(data.movies);\n  }, function (rejectionReason) {\n    // 3\n    console.log('Error parsing JSON from response:', rejectionReason, responseClone); // 4\n    responseClone.text() // 5\n    .then(function (bodyText) {\n      console.log('Received the following instead of valid JSON:', bodyText); // 6\n    });\n  });\n\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Movies","jsxDEV","_jsxDEV","App","_s","movies","setMovies","responseClone","fetch","then","response","clone","json","data","rejectionReason","console","log","text","bodyText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/elainetang/Code/IntelliPrep/code/react-flask/intelliprep/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Movies } from \"./components/Movies\";\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  /*useEffect(() => {\n    fetch(\"/movies\").then(response => response.json().then(data => {\n      setMovies(data.movies);\n    }))\n  }, []); */\n\n  var responseClone; // 1\n  fetch('/movies')\n  .then(function (response) {\n    responseClone = response.clone(); // 2\n    return response.json();\n  })\n  .then(function (data) {\n    setMovies(data.movies);\n  }, function (rejectionReason) { // 3\n    console.log('Error parsing JSON from response:', rejectionReason, responseClone); // 4\n    responseClone.text() // 5\n    .then(function (bodyText) {\n        console.log('Received the following instead of valid JSON:', bodyText); // 6\n    });\n  });\n\n  console.log(movies);\n\n  return (\n    <div className=\"App\">\n      <Movies movies = {movies}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC;AACF;AACA;AACA;AACA;;EAEE,IAAIQ,aAAa,CAAC,CAAC;EACnBC,KAAK,CAAC,SAAS,CAAC,CACfC,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxBH,aAAa,GAAGG,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDH,IAAI,CAAC,UAAUI,IAAI,EAAE;IACpBP,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;EACxB,CAAC,EAAE,UAAUS,eAAe,EAAE;IAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,eAAe,EAAEP,aAAa,CAAC,CAAC,CAAC;IAClFA,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC;IAAA,CACpBR,IAAI,CAAC,UAAUS,QAAQ,EAAE;MACtBH,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEE,QAAQ,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEFH,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;EAEnB,oBACEH,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA,CAACF,MAAM;MAACK,MAAM,EAAIA;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACpB,EAAA,CA/BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}